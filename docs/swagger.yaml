basePath: /
host: 127.0.0.1E
info:
  contact:
    email: ax.chinaev@yandex.ru
    name: Alex Chinaev
    url: https://vk.com/l.chinaev
  description: API of the nelfix project by holi
  license:
    name: AS IS (NO WARRANTY)
  title: Netfilx API
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: create user session and put it into cookie
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            type: json
        "403":
          description: Forbidden
          schema:
            type: json
        "404":
          description: Not Found
          schema:
            type: json
        "500":
          description: Internal Server Error
          schema:
            type: json
      summary: login user
      tags:
      - auth
  /api/v1/auth/logout:
    post:
      description: delete current session and nullify cookie
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            type: json
        "403":
          description: Forbidden
          schema:
            type: json
        "404":
          description: Not Found
          schema:
            type: json
        "500":
          description: Internal Server Error
          schema:
            type: json
      summary: logout user
      tags:
      - auth
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: add new user to db and return it id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: json
        "400":
          description: Bad Request
          schema:
            type: json
        "403":
          description: Forbidden
          schema:
            type: json
        "500":
          description: Internal Server Error
          schema:
            type: json
      summary: register user
      tags:
      - auth
  /api/v1/films/{id}:
    get:
      description: Get content for Film page
      parameters:
      - description: The genre of the Films you want to retrieve.
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: json
        "400":
          description: Bad Request
          schema:
            type: json
        "404":
          description: Not Found
          schema:
            type: json
        "500":
          description: Internal Server Error
          schema:
            type: json
      summary: Get Film data by id
      tags:
      - Films
  /api/v1/films/genre/{genre}:
    get:
      description: Get a list of films based on the specified genre.
      parameters:
      - description: The genre of the Films you want to retrieve.
        in: path
        name: genre
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: json
        "400":
          description: Bad Request
          schema:
            type: json
        "404":
          description: Not Found
          schema:
            type: json
        "500":
          description: Internal Server Error
          schema:
            type: json
      summary: Get films by genre
      tags:
      - Films
  /api/v1/profile/{id}:
    get:
      description: Get user data by id
      parameters:
      - description: The user id you want to retrieve.
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: json
        "400":
          description: Bad Request
          schema:
            type: json
        "404":
          description: Not Found
          schema:
            type: json
        "500":
          description: Internal Server Error
          schema:
            type: json
      summary: Get user by id
      tags:
      - profile
  /api/v1/profile/update:
    post:
      consumes:
      - application/json
      description: update user data in db and return it
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: json
        "400":
          description: Bad Request
          schema:
            type: json
        "403":
          description: Forbidden
          schema:
            type: json
        "500":
          description: Internal Server Error
          schema:
            type: json
      summary: update profile
      tags:
      - profile
schemes:
- http
swagger: "2.0"
